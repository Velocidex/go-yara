diff --git a/libyara/exec.c b/libyara/exec.c
index a0cf138..286cb0d 100644
--- a/libyara/exec.c
+++ b/libyara/exec.c
@@ -31,7 +31,6 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 #include <string.h>
 #include <assert.h>
-#include <math.h>
 #include <float.h>
 
 #include <yara/globals.h>
diff --git a/libyara/include/yara/limits.h b/libyara/include/yara/limits.h
index 8df3cc2..b122067 100644
--- a/libyara/include/yara/limits.h
+++ b/libyara/include/yara/limits.h
@@ -34,7 +34,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include <windows.h>
 #endif
 
-#include "utils.h"
+#include "yara/utils.h"
 
 // Maximum lenght of file paths. This is the only limit that doesn't have the
 // YR_ prefix. The intention is using the default MAX_PATH if defined.
diff --git a/libyara/include/yara/modules.h b/libyara/include/yara/modules.h
index 1724f00..d6f53a7 100644
--- a/libyara/include/yara/modules.h
+++ b/libyara/include/yara/modules.h
@@ -33,7 +33,6 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include <assert.h>
 #include <stdio.h>
 #include <string.h>
-#include <math.h>
 
 #include <yara/utils.h>
 #include <yara/limits.h>
diff --git a/libyara/include/yara/parser.h b/libyara/include/yara/parser.h
index abfa986..b04dd54 100644
--- a/libyara/include/yara/parser.h
+++ b/libyara/include/yara/parser.h
@@ -31,7 +31,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #define YR_PARSER_H
 
 
-#include "lexer.h"
+#include "yara/lexer.h"
 
 
 int yr_parser_emit(
diff --git a/libyara/lexer.c b/libyara/lexer.c
index 02e23bf..1757b0f 100644
--- a/libyara/lexer.c
+++ b/libyara/lexer.c
@@ -721,7 +721,6 @@ with noyywrap then we can remove this pragma.
 #pragma GCC diagnostic ignored "-Wunused-function"
 #endif
 
-#include <math.h>
 #include <stdarg.h>
 #include <stdio.h>
 #include <stdlib.h>
diff --git a/libyara/lexer.l b/libyara/lexer.l
index 23318d8..4f6f695 100644
--- a/libyara/lexer.l
+++ b/libyara/lexer.l
@@ -44,7 +44,6 @@ with noyywrap then we can remove this pragma.
 #pragma GCC diagnostic ignored "-Wunused-function"
 #endif
 
-#include <math.h>
 #include <stdarg.h>
 #include <stdio.h>
 #include <stdlib.h>
diff --git a/libyara/modules/math.c b/libyara/modules/math.c
index 759112e..4db2a3a 100644
--- a/libyara/modules/math.c
+++ b/libyara/modules/math.c
@@ -27,8 +27,6 @@ ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
 
-#include <math.h>
-
 #include <yara/utils.h>
 #include <yara/modules.h>
 #include <yara/mem.h>
@@ -39,13 +37,22 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 // log2 is not defined by math.h in VC++
 
-#ifdef _MSC_VER
-double log2(double n)
+ // A fast approximate log2 function:
+ // https://github.com/etheory/fastapprox/blob/master/fastapprox/src/fastlog.h
+ // Having it here removes the need to link to the math library and
+ // reduces our depenencies while being good enough for entropy
+ // detection.
+double log2 (double x)
 {
-  return log(n) / log(2.0);
+    union { float f; uint32_t i; } vx = { x };
+    union { uint32_t i; float f; } mx = { (vx.i & 0x007FFFFF) | 0x3f000000 };
+    float y = vx.i;
+    y *= 1.1920928955078125e-7f;
+
+    return y - 124.22551499f
+        - 1.498030302f * mx.f
+        - 1.72587999f / (0.3520887068f + mx.f);
 }
-#endif
-
 
 define_function(string_entropy)
 {
diff --git a/libyara/modules/pe.c b/libyara/modules/pe.c
index 0c447c6..b263ae8 100644
--- a/libyara/modules/pe.c
+++ b/libyara/modules/pe.c
@@ -33,7 +33,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include <ctype.h>
 #include <time.h>
 
-#include "../crypto.h"
+#include "crypto.h"
 #if defined(HAVE_LIBCRYPTO)
 #include <openssl/safestack.h>
 #include <openssl/asn1.h>
diff --git a/libyara/object.c b/libyara/object.c
index d248dcc..f8a41a4 100644
--- a/libyara/object.c
+++ b/libyara/object.c
@@ -34,7 +34,6 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
-#include <math.h>
 
 #include <yara/globals.h>
 #include <yara/mem.h>
diff --git a/libyara/proc/linux.c b/libyara/proc/linux.c
index a719ad2..4e398f6 100644
--- a/libyara/proc/linux.c
+++ b/libyara/proc/linux.c
@@ -27,7 +27,6 @@ ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
 
-#if defined(USE_LINUX_PROC)
 
 #include <fcntl.h>
 #include <inttypes.h>
@@ -214,5 +213,3 @@ YR_API YR_MEMORY_BLOCK* yr_process_get_first_memory_block(
 
   return yr_process_get_next_memory_block(iterator);
 }
-
-#endif
diff --git a/libyara/proc/mach.c b/libyara/proc/mach.c
index 8ab6c52..be86abd 100644
--- a/libyara/proc/mach.c
+++ b/libyara/proc/mach.c
@@ -27,7 +27,6 @@ ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
 
-#if defined(USE_MACH_PROC)
 
 #include <mach/mach.h>
 #include <mach/mach_vm.h>
@@ -168,5 +167,3 @@ YR_API YR_MEMORY_BLOCK* yr_process_get_first_memory_block(
 
   return yr_process_get_next_memory_block(iterator);
 }
-
-#endif
diff --git a/libyara/proc/windows.c b/libyara/proc/windows.c
index c39521d..ceabf0e 100644
--- a/libyara/proc/windows.c
+++ b/libyara/proc/windows.c
@@ -27,7 +27,6 @@ ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
 
-#if defined(USE_WINDOWS_PROC)
 
 #include <windows.h>
 
@@ -187,5 +186,3 @@ YR_API YR_MEMORY_BLOCK* yr_process_get_first_memory_block(
 
   return yr_process_get_next_memory_block(iterator);
 }
-
-#endif
